!function (a, e) { for (zaraz.debug = (a = "") => { document.cookie = `zarazDebug=${a}; path=/`, location.reload() }, window.zaraz._al = function (e, r, t) { a.zaraz.listeners.push({ item: e, type: r, callback: t }), e.addEventListener(r, t) }, zaraz.preview = (a = "") => { document.cookie = `zarazPreview=${a}; path=/`, location.reload() }, zaraz.i = function (a) { const r = e.createElement("div"); r.innerHTML = unescape(a); const t = r.querySelectorAll("script"); for (let a = 0; a < t.length; a++) { const r = e.createElement("script"); t[a].innerHTML && (r.innerHTML = t[a].innerHTML); for (const e of t[a].attributes) r.setAttribute(e.name, e.value); e.head.appendChild(r), t[a].remove() } e.body.appendChild(r) }, zaraz.f = async function (a, e) { const r = { credentials: "include", keepalive: !0, mode: "no-cors" }; return e && (r.method = "POST", r.body = new URLSearchParams(e), r.headers = { "Content-Type": "application/x-www-form-urlencoded" }), await fetch(a, r) }; zaraz.deferred.length;)zaraz.deferred.pop()(); Object.defineProperty(zaraz.deferred, "push", { configurable: !0, enumerable: !1, writable: !0, value: function (...a) { let e = Array.prototype.push.apply(this, a); for (; zaraz.deferred.length;)zaraz.deferred.pop()(); return e } }), addEventListener("onpagehide" in self ? "pagehide" : "unload", (function () { for (; zaraz.deferred.length;)zaraz.deferred.pop()() })), window.zaraz._p = a => { if (a && (a.e && a.e.forEach((a => { try { new Function(a)() } catch (e) { console.error(`Error executing script: ${a}\n`, e) } })), a.f)) for (const e of a.f) fetch(e[0], e[1]) }, zaraz.pageVariables = {}, zaraz.track = function (a, e, r) { const t = { name: a, data: {} }; for (const a of [localStorage, sessionStorage]) Object.keys(a || {}).filter((a => a.startsWith("_zaraz_"))).forEach((e => { try { t.data[e.slice(7)] = JSON.parse(a.getItem(e)) } catch { t.data[e.slice(7)] = a.getItem(e) } })); Object.keys(zaraz.pageVariables).forEach((a => t.data[a] = JSON.parse(zaraz.pageVariables[a]))), t.data = { ...t.data, ...e }, t.zarazData = zarazData, fetch("/cdn-cgi/zaraz/t", { credentials: "include", keepalive: !0, method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(t) }).catch((() => (console.warn("Large event payload sent to Cloudflare Zaraz, cannot assure deliverability."), fetch("/cdn-cgi/zaraz/t", { credentials: "include", method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(t) })))).then((function (a) { return zarazData._let = (new Date).getTime(), 200 === a.status && a.json() })).then((function (a) { zaraz._p(a), "function" == typeof r && r() })) }, zaraz.set = function (a, e, r) { e = JSON.stringify(e), prefixedKey = "_zaraz_" + a, sessionStorage.removeItem(prefixedKey), localStorage.removeItem(prefixedKey), delete zaraz.pageVariables[a], void 0 !== e && (r && "session" == r.scope ? sessionStorage.setItem(prefixedKey, e) : r && "page" == r.scope ? zaraz.pageVariables[a] = e : localStorage.setItem(prefixedKey, e), zaraz.__watchVar = { key: a, value: e }) }; for (const { m: a, a: e } of zarazData.q.filter((({ m: a }) => ["debug", "set"].includes(a)))) zaraz[a](...e); for (const { m: a, a: e } of zaraz.q) zaraz[a](...e); delete zaraz.q, delete zarazData.q, zaraz.fulfilTrigger = function (a, e, r, t) { zaraz.__zarazTriggerMap || (zaraz.__zarazTriggerMap = {}), zaraz.__zarazTriggerMap[a] || (zaraz.__zarazTriggerMap[a] = ""), zaraz.__zarazTriggerMap[a] += "*" + e + "*", zaraz.track("__zarazEmpty", { ...r, __zarazClientTriggers: zaraz.__zarazTriggerMap[a] }, t) }, window.dataLayer = a.dataLayer || [], zaraz._processDataLayer = a => { for (const e of Object.entries(a)) zaraz.set(e[0], e[1], { scope: "page" }); if (a.event) { if (zarazData.dataLayerIgnore && zarazData.dataLayerIgnore.includes(a.event)) return; let e = {}; for (let r of dataLayer.slice(0, dataLayer.indexOf(a) + 1)) e = { ...e, ...r }; delete e.event, a.event.startsWith("gtm.") || zaraz.track(a.event, e) } }, Object.defineProperty(a.dataLayer, "push", { configurable: !0, enumerable: !1, writable: !0, value: function (...a) { let e = Array.prototype.push.apply(this, a); return zaraz._processDataLayer(a[0]), e } }), dataLayer.forEach((a => zaraz._processDataLayer(a))), zaraz._cts = () => { zaraz._timeouts?.forEach((a => clearTimeout(a))), zaraz._timeouts = [] }, zaraz._rl = function () { a.zaraz.listeners?.forEach((a => a.item.removeEventListener(a.type, a.callback))), window.zaraz.listeners = [] }, history.pushState = function () { try { zaraz._rl(), zaraz._cts && zaraz._cts() } finally { History.prototype.pushState.apply(history, arguments), setTimeout((() => { zarazData.l = e.location.href, zarazData.t = e.title, zaraz.pageVariables = {}, zaraz.track("__zarazSPA") }), 100) } }, history.replaceState = function () { try { zaraz._rl(), zaraz._cts && zaraz._cts() } finally { History.prototype.replaceState.apply(history, arguments), setTimeout((() => { zarazData.l = e.location.href, zarazData.t = e.title, zaraz.pageVariables = {}, zaraz.track("__zarazSPA") }), 100) } }, zaraz._p({ e: ['(function(w,d){w.zarazData.executed.push("Pageview");})(window,document)'] }) }(window, document);